<Window x:Class="Shield.WpfGui.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Shield.WpfGui.Views"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="ShellView" Height="450" Width="800">

    <Window.Resources>
        <Style TargetType="{x:Type RadioButton}" x:Key="FlatRadioButtonStyle">
            <Setter Property="Width" Value="100" />
            <Setter Property="Background" Value="#FF346FD6" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="5,2,5,3" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF6696E9" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>

        <!--<Button x:Name="OpenDevice" Grid.Column="1" Grid.Row="1" MaxHeight="50" MaxWidth="150" VerticalAlignment="Top">Open device</Button>-->
        <!--<Button x:Name="StartReceiving" Grid.Column="1" Grid.Row="1" MaxHeight="50" MaxWidth="150"  VerticalAlignment="Center">Start receiving</Button>-->

        <DataGrid x:Name="ReceivedMessages" Grid.Row="1" Grid.Column="3"
                  CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" Grid.RowSpan="4"
                  AutoGenerateColumns="False"
                  SelectedItem="SelectedReceivedMessage">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}" />
                <DataGridTextColumn Header="Command count" Binding="{Binding Path=CommandCount}" />
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <DataGrid x:Name="SingleMessageCommands" ItemsSource="{Binding Path=Commands}" AutoGenerateColumns="False" RowDetailsVisibilityMode="VisibleWhenSelected" AlternatingRowBackground="AntiqueWhite" IsReadOnly="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Command Type" Binding="{Binding Path=CommandType}" />
                            <DataGridTextColumn Header="Data" Binding="{Binding Path=Data}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        
        <DataGrid x:Name="SingleMessageCommands" Grid.Column="1" Grid.Row="4" Grid.RowSpan="1" ></DataGrid>

        <RadioButton x:Name="StopReceiving" GroupName="ReceivingButtons" Content="Stop Receiving" Grid.Column="1" Grid.Row="1"  IsChecked="{Binding Path=ButtonAIsChecked, Mode=OneWay}" >
            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource FlatRadioButtonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=StartReceiving}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>
        <RadioButton x:Name="StartReceiving" GroupName="ReceivingButtons" Content="Start Receiving" Grid.Column="1" Grid.Row="1" >
            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource FlatRadioButtonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=StopReceiving}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>        

        <RadioButton x:Name="CloseDevice" Content="Close Device" Grid.Column="1" Grid.Row="2" IsChecked="True">
            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource FlatRadioButtonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=OpenDevice}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>
        <RadioButton x:Name="OpenDevice" Content="Open Device" Grid.Column="1" Grid.Row="2">
            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource FlatRadioButtonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=CloseDevice}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>
    </Grid>
</Window>